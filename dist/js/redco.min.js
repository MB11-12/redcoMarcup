"use strict";!function(){document.addEventListener("DOMContentLoaded",function(e){var t=document.body,s=0,n=header.offsetTop;window.addEventListener("scroll",function(){var e=window.pageYOffset;if(0==e||e<0)return t.classList.remove("scroll-up"),void t.classList.add("default-state");s<e&&!t.classList.contains("scroll-down")?(t.classList.remove("scroll-up"),t.classList.remove("default-state"),t.classList.add("scroll-down")):e<s&&t.classList.contains("scroll-down")&&(t.classList.remove("scroll-down"),t.classList.remove("default-state"),t.classList.add("scroll-up")),s=e}),window.onscroll=function(e){window.pageYOffset>n?header.classList.add("sticky"):header.classList.remove("sticky")}});!function(){var e=document.getElementsByClassName("faq__list_item");if(void 0!==e&&null!=e)for(var t=0;t<e.length;t++)e[t].addEventListener("click",function(){this.classList.toggle("active")})}();!function(){var e=Array.from(document.getElementsByClassName("progressBar__list_item"));if(void 0!==e&&null!=e){var t=function(){$(".progressBar__list_item.active").removeClass("active"),$(this).addClass("active");var e=void 0;if(767<$(window).width()){if(3<$(this).index()&&$(this).index()<=0)return;0<$(this).index()&&(e=20*$(this).index()+"%",$(".progressBar__line").css("width",e))}else{if(3<$(this).index()&&$(this).index()<=0)return;0<$(this).index()&&(e=20*$(this).index()+"%",$(".progressBar__line").css("height",e))}};e.forEach(function(e){e.addEventListener("touchstart",t,{passive:!0}),e.addEventListener("mousedown",t,{passive:!0}),e.addEventListener("touchmove",t,{passive:!0}),e.addEventListener("mousemove",t,{passive:!0})})}}();document.addEventListener("DOMContentLoaded",function(e){var t=document.getElementById("header__container"),s=document.getElementById("header__menu_mob-btn"),n=document.getElementById("header__nav"),i=document.getElementById("header__logo"),a=document.getElementById("header__menu_mob");s.addEventListener("click",function(e){e.preventDefault(),n.classList.contains("active")?n.classList.remove("active"):n.classList.add("active"),a.classList.contains("active")?a.classList.remove("active"):a.classList.add("active"),s.classList.contains("active")?s.classList.remove("active"):s.classList.add("active"),i.classList.contains("active")?i.classList.remove("active"):i.classList.add("active"),t.classList.contains("active")?t.classList.remove("active"):t.classList.add("active")})});document.addEventListener("DOMContentLoaded",function(e){var t=document.getElementById("counterContainer");void 0!==t&&null!=t&&(window.onscroll=function(e){var t,s;t=0,s=$("#counterContainer").offset().top-window.innerHeight,0==t&&$(window).scrollTop()>s&&($(".counterValue").each(function(){var e=$(this),t=e.attr("data-count");$({countNum:e.text()}).animate({countNum:t},{duration:3e3,easing:"swing",step:function(){e.text(Math.floor(this.countNum))},complete:function(){e.text(this.countNum)}})}),t=1)})});document.addEventListener("DOMContentLoaded",function(e){var t=document.getElementById("pageNotFound__nav_btn-back");void 0!==t&&null!=t&&(e.preventDefault(),t.addEventListener("click",function(){window.history.back()}))})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
