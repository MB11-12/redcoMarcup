"use strict";!function(){var e,t;!function(){var t=document.getElementsByClassName("faq__list_item");if(void 0!==t&&null!=t)for(var e=0;e<t.length;e++)t[e].addEventListener("click",function(){this.classList.toggle("active")})}(),void 0!==(t=Array.from(document.getElementsByClassName("progressBar__list_item")))&&null!=t&&(e=function(){$(".progressBar__list_item.active").removeClass("active"),$(this).addClass("active");var t=void 0;767<$(window).width()?3<$(this).index()&&$(this).index()<=0||0<$(this).index()&&(t=20*$(this).index()+"%",$(".progressBar__line").css("width",t)):3<$(this).index()&&$(this).index()<=0||0<$(this).index()&&(t=20*$(this).index()+"%",$(".progressBar__line").css("height",t))},t.forEach(function(t){t.addEventListener("touchstart",e,{passive:!0}),t.addEventListener("mousedown",e,{passive:!0}),t.addEventListener("touchmove",e,{passive:!0}),t.addEventListener("mousemove",e,{passive:!0})})),document.addEventListener("DOMContentLoaded",function(t){var e=document.getElementById("header__container"),s=document.getElementById("header__menu_mob-btn"),n=document.getElementById("nav__list"),i=document.getElementById("header__menu_mob");s.addEventListener("click",function(t){t.preventDefault(),n.classList.contains("active")?n.classList.remove("active"):n.classList.add("active"),i.classList.contains("active")?i.classList.remove("active"):i.classList.add("active"),s.classList.contains("active")?s.classList.remove("active"):s.classList.add("active"),e.classList.contains("active")?e.classList.remove("active"):e.classList.add("active")})}),document.addEventListener("DOMContentLoaded",function(t){var e=document.getElementById("counterContainer");void 0!==e&&null!=e&&(window.onscroll=function(t){var e;e=$("#counterContainer").offset().top-window.innerHeight,$(window).scrollTop()>e&&$(".counterValue").each(function(){var t=$(this),e=t.attr("data-count");$({countNum:t.text()}).animate({countNum:e},{duration:3e3,easing:"swing",step:function(){t.text(Math.floor(this.countNum))},complete:function(){t.text(this.countNum)}})})})}),document.addEventListener("DOMContentLoaded",function(t){var e=document.body,s=0,n=header.offsetTop;window.addEventListener("scroll",function(){var t=window.pageYOffset;if(0==t||t<0)return e.classList.remove("scroll-up"),void e.classList.add("default-state");s<t&&!e.classList.contains("scroll-down")?(e.classList.remove("scroll-up"),e.classList.remove("default-state"),e.classList.add("scroll-down")):t<s&&e.classList.contains("scroll-down")&&(e.classList.remove("scroll-down"),e.classList.remove("default-state"),e.classList.add("scroll-up")),s=t}),window.onscroll=function(t){window.pageYOffset>n?header.classList.add("sticky"):header.classList.remove("sticky")}}),document.addEventListener("DOMContentLoaded",function(t){var e=document.getElementById("pageNotFound__nav_btn-back");void 0!==e&&null!=e&&(t.preventDefault(),e.addEventListener("click",function(){window.history.back()}))})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
